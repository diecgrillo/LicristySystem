/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Consignacao1.java
 *
 * Created on 23/12/2010, 11:54:24
 */
package licrystsystem.menu;

import java.awt.Graphics;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import licrystsystem.main.FramePrincipal;

/**
 *
 * @author Diego
 */
public class Consignacao1 extends javax.swing.JPanel {

    private FramePrincipal framePrincipal;
    private NumberFormat formatoMonetario = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

    /** Creates new form Consignacao1 */
    public Consignacao1(FramePrincipal framePrincipal) {
        this.framePrincipal = framePrincipal;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel3 =  new JPanel(){
            protected void paintComponent( Graphics g ){
                super.paintComponent(g);
                g.drawImage(framePrincipal.getImagem(), 0, 0, getWidth(), getHeight(), this);
            }
        };

        setLayout(new java.awt.GridLayout(1, 2));

        jPanel2.setBackground(new java.awt.Color(102, 0, 51));

        jLabel1.setBackground(new java.awt.Color(102, 0, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Vendedor(a):");

        jButton1.setBackground(new java.awt.Color(102, 0, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 51));
        jButton1.setText("Consultar tabela de vendedoras");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 0, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 51));
        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setBackground(new java.awt.Color(255, 204, 255));
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(102, 0, 51));
        jComboBox1.setModel(new DefaultComboBoxModel());
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 0, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 51));
        jButton3.setText("Devolver produtos consignados");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(102, 0, 51));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(102, 0, 51));
        jButton4.setText("Fechar consignação");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(102, 0, 51));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(102, 0, 51));
        jButton5.setText("Consignar produtos");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(160, 160, 160))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(jButton5)
                .addGap(32, 32, 32)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButton4)
                .addGap(32, 32, 32)
                .addComponent(jButton1)
                .addGap(101, 101, 101)
                .addComponent(jButton2)
                .addGap(313, 313, 313))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton3, jButton4, jButton5});

        add(jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 472, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 967, Short.MAX_VALUE)
        );

        add(jPanel3);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (jComboBox1.getItemCount() > 0) {
            int linhas = framePrincipal.getBaixaConsignacao().getjTable1().getRowCount();
            Integer numUnidades = 0;
            for (int i = 0; i < linhas; i++) {
                framePrincipal.getBaixaConsignacao().getModeloTabela().removeRow(0);
            }
            framePrincipal.getBaixaConsignacao().getjLabel3().setText("R$");
            framePrincipal.getBaixaConsignacao().setPreco_total(0);
            framePrincipal.getBaixaConsignacao().setQtdProdutos(0);
            framePrincipal.getBaixaConsignacao().setQtde_prod_tot_vend(0);
            framePrincipal.getBaixaConsignacao().setQuantidades_c_vendedor(new ArrayList<Integer>());
            framePrincipal.getBaixaConsignacao().setQuantidades_em_consignacao(new ArrayList<Integer>());
            framePrincipal.getBaixaConsignacao().setQuantidades_em_estoque(new ArrayList<Integer>());
            framePrincipal.setContentPane(framePrincipal.getBaixaConsignacao());
            framePrincipal.getBaixaConsignacao().getjTextField1().requestFocus();
            framePrincipal.pack();
            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
            framePrincipal.getBaixaConsignacao().getNome().setText(jComboBox1.getSelectedItem().toString());
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT P.NOME, C.CODBARRAS, C.QTDE as C_QTDE, P.CODBARRAS, P.PRECO, P.QTDE as P_QTDE, P.QTDECONS FROM CONSIGNACAO C JOIN PRODUTO P ON (P.CODBARRAS = C.CODBARRAS) WHERE C.NOME = '" + framePrincipal.getBaixaConsignacao().getNome().getText() + "' GROUP BY P.NOME, C.CODBARRAS, C.QTDE, P.CODBARRAS, P.PRECO, P.QTDE, P.QTDECONS;"));
                int i = 0;
                while (framePrincipal.getRs().next()) {
                    if (framePrincipal.getBaixaConsignacao().getModeloTabela().getRowCount() < i + 1) {
                        framePrincipal.getBaixaConsignacao().getModeloTabela().addRow(new String[framePrincipal.getTabelaProdutos().getModeloTabela().getColumnCount()]);
                    }
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(
                            framePrincipal.getRs().getString("NOME"), i, 0);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(
                            framePrincipal.getRs().getString("CODBARRAS"), i, 1);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(
                            formatoMonetario.format(Float.parseFloat(framePrincipal.getRs().getString("PRECO"))), i, 2);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(
                            framePrincipal.getRs().getString("C_QTDE"), i, 3);
                    framePrincipal.getBaixaConsignacao().setPreco_total(framePrincipal.getBaixaConsignacao().getPreco_total() + framePrincipal.getRs().getInt("C_QTDE")
                            * Float.parseFloat(framePrincipal.getRs().getString("PRECO")));
                    numUnidades += framePrincipal.getRs().getInt("C_QTDE");
                    framePrincipal.getBaixaConsignacao().getjLabelTotalUnidades().setText(numUnidades.toString());
                    i++;
                }
                framePrincipal.getBaixaConsignacao().getjLabel3().setText(
                        formatoMonetario.format(framePrincipal.getBaixaConsignacao().getPreco_total()));
                framePrincipal.getBaixaConsignacao().getjTable1().repaint();
                framePrincipal.getBaixaConsignacao().getjTextField1().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjTextField2().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjButton1().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjButton3().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjLabel1().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjLabel7().setVisible(false);
                framePrincipal.getBaixaConsignacao().getjButton4().setVisible(true);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Vendedor não encontrado");
            }
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT DATAVENC, QTDE FROM VENDEDORA  WHERE NOME = '" + framePrincipal.getBaixaConsignacao().getNome().getText() + "';"));
                while (framePrincipal.getRs().next()) {
                    Date data = new Date();
                    if(framePrincipal.getRs().getDate("DATAVENC") != null){                    
                        data = new Date(framePrincipal.getRs().getDate("DATAVENC").getTime());                                            
                    }
                    framePrincipal.getBaixaConsignacao().setDataVenc(data);
                    framePrincipal.getBaixaConsignacao().setQtde_prod_tot_vend(framePrincipal.getRs().getInt("QTDE"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(Consignacao1.class.getName()).log(Level.SEVERE, null, ex);
            }


        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma vendedora");
        }






        //        try {
//            framePrincipal.getTabelaVendedora().setN(2);
//            framePrincipal.getTabelaVendedora().getjTable1().setEnabled(false);
//            framePrincipal.setContentPane(framePrincipal.getTabelaVendedora());
//            framePrincipal.pack();
//            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
//            framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT V.NOME, V.RG, V.CPF, V.RUA, V.NUMERO, V.COMPLEMENTO, V.BAIRRO, V.CIDADE, V.DATANASC, V.TELLRES, V.TELTRAB, V.CELL, V.OBSERVACAO FROM VENDEDORA V GROUP BY V.NOME, V.RG, V.CPF, V.RUA, V.NUMERO, V.COMPLEMENTO, V.BAIRRO, V.CIDADE, V.DATANASC, V.TELLRES, V.TELTRAB, V.CELL, V.OBSERVACAO;"));
//            if (!framePrincipal.getCadastrarVendedora1().isAtualizado()) {
//                int i = 0;
//                framePrincipal.getTabelaVendedora().setRGs(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setCPFs(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setData(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setTelTrab(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setObs(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setRuas(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setNumeros(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setComps(new ArrayList<String>());
//                framePrincipal.getTabelaVendedora().setBairros(new ArrayList<String>());
//                while (framePrincipal.getRs().next()) {
//                    if (framePrincipal.getTabelaVendedora().getModeloTabela().getRowCount() < i + 1) {
//                        framePrincipal.getTabelaVendedora().getModeloTabela().addRow(new String[framePrincipal.getTabelaVendedora().getModeloTabela().getColumnCount()]);
//                    }
//                    framePrincipal.getTabelaVendedora().getRGs().add(framePrincipal.getRs().getString("RG"));
//                    framePrincipal.getTabelaVendedora().getCPFs().add(framePrincipal.getRs().getString("CPF"));
//                    framePrincipal.getTabelaVendedora().getData().add(framePrincipal.getRs().getString("DATANASC"));
//                    framePrincipal.getTabelaVendedora().getTelTrab().add(framePrincipal.getRs().getString("TELTRAB"));
//                    framePrincipal.getTabelaVendedora().getObs().add(framePrincipal.getRs().getString("OBSERVACAO"));
//                    framePrincipal.getTabelaVendedora().getRuas().add(framePrincipal.getRs().getString("RUA"));
//                    framePrincipal.getTabelaVendedora().getNumeros().add(framePrincipal.getRs().getString("NUMERO"));
//                    framePrincipal.getTabelaVendedora().getComps().add(framePrincipal.getRs().getString("COMPLEMENTO"));
//                    framePrincipal.getTabelaVendedora().getBairros().add(framePrincipal.getRs().getString("BAIRRO"));
//                    framePrincipal.getTabelaVendedora().getModeloTabela().setValueAt(framePrincipal.getRs().getString("NOME"), i, 0);
//                    framePrincipal.getTabelaVendedora().getModeloTabela().setValueAt(framePrincipal.getRs().getString("RUA") + " nº " + framePrincipal.getRs().getString("NUMERO") + " " + framePrincipal.getRs().getString("COMPLEMENTO") + " " + framePrincipal.getRs().getString("BAIRRO"), i, 1);
//                    framePrincipal.getTabelaVendedora().getModeloTabela().setValueAt(framePrincipal.getRs().getString("CIDADE"), i, 2);
//                    framePrincipal.getTabelaVendedora().getModeloTabela().setValueAt(framePrincipal.getRs().getString("TELLRES"), i, 3);
//                    framePrincipal.getTabelaVendedora().getModeloTabela().setValueAt(framePrincipal.getRs().getString("CELL"), i, 4);
//                    i++;
//                }
//                framePrincipal.getTabelaVendedora().getjTable1().repaint();
//                framePrincipal.getCadastrarVendedora1().setAtualizado(true);
//            }
//        } catch (SQLException ex) {
//            Logger.getLogger(Consignacao1.class.getName()).log(Level.SEVERE, null, ex);
//        }
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        framePrincipal.setContentPane(framePrincipal.getMenuPrincipal());
        framePrincipal.pack();
        framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (jComboBox1.getItemCount() > 0) {
            int linhas = framePrincipal.getBaixaConsignacao().getjTable1().getRowCount();
            Integer numUnidades = 0;
            for (int i = 0; i < linhas; i++) {
                framePrincipal.getBaixaConsignacao().getModeloTabela().removeRow(0);
            }
            framePrincipal.getBaixaConsignacao().getjLabel3().setText("R$");
            framePrincipal.getBaixaConsignacao().setPreco_total(0);
            framePrincipal.getBaixaConsignacao().setQtdProdutos(0);
            framePrincipal.getBaixaConsignacao().setQuantidades_c_vendedor(new ArrayList<Integer>());
            framePrincipal.getBaixaConsignacao().setQuantidades_em_consignacao(new ArrayList<Integer>());
            framePrincipal.getBaixaConsignacao().setQuantidades_em_estoque(new ArrayList<Integer>());
            framePrincipal.setContentPane(framePrincipal.getBaixaConsignacao());
            framePrincipal.getBaixaConsignacao().getjTextField1().requestFocus();
            framePrincipal.pack();
            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
            framePrincipal.getBaixaConsignacao().getNome().setText(jComboBox1.getSelectedItem().toString());
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT P.NOME, C.CODBARRAS, C.QTDE as C_QTDE, P.CODBARRAS, P.PRECO, P.QTDE as P_QTDE, P.QTDECONS FROM CONSIGNACAO C JOIN PRODUTO P ON (P.CODBARRAS = C.CODBARRAS) WHERE C.NOME = '" + framePrincipal.getBaixaConsignacao().getNome().getText() + "' GROUP BY P.NOME, C.CODBARRAS, C.QTDE, P.CODBARRAS, P.PRECO, P.QTDE, P.QTDECONS;"));
                int i = 0;
                while (framePrincipal.getRs().next()) {
                    if (framePrincipal.getBaixaConsignacao().getModeloTabela().getRowCount() < i + 1) {
                        framePrincipal.getBaixaConsignacao().getModeloTabela().addRow(new String[framePrincipal.getTabelaProdutos().getModeloTabela().getColumnCount()]);
                    }
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(framePrincipal.getRs().getString("NOME"), i, 0);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(framePrincipal.getRs().getString("CODBARRAS"), i, 1);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt("R$ " + framePrincipal.getRs().getString("PRECO"), i, 2);
                    framePrincipal.getBaixaConsignacao().getModeloTabela().setValueAt(framePrincipal.getRs().getString("C_QTDE"), i, 3);
                    framePrincipal.getBaixaConsignacao().setPreco_total(
                            framePrincipal.getBaixaConsignacao().getPreco_total() + 
                            framePrincipal.getRs().getInt("C_QTDE") * 
                            Float.parseFloat(framePrincipal.getRs().getString("PRECO")));
                    numUnidades += framePrincipal.getRs().getInt("C_QTDE");
                    framePrincipal.getBaixaConsignacao().getjLabelTotalUnidades().setText(numUnidades.toString());
                    i++;
                    framePrincipal.getBaixaConsignacao().getQuantidades_em_consignacao().add(framePrincipal.getRs().getInt("QTDECONS"));
                    framePrincipal.getBaixaConsignacao().getQuantidades_em_estoque().add(framePrincipal.getRs().getInt("P_QTDE"));
                    framePrincipal.getBaixaConsignacao().getQuantidades_c_vendedor().add(framePrincipal.getRs().getInt("C_QTDE"));
                }
                
                framePrincipal.getBaixaConsignacao().getjLabel3().setText(formatoMonetario.format(framePrincipal.getBaixaConsignacao().getPreco_total()));
                framePrincipal.getBaixaConsignacao().getjTable1().repaint();
                framePrincipal.getBaixaConsignacao().getjTextField1().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjTextField2().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjButton1().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjButton3().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjLabel1().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjLabel7().setVisible(true);
                framePrincipal.getBaixaConsignacao().getjButton4().setVisible(false);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Vendedor não encontrado");
            }
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT DATAVENC, QTDE FROM VENDEDORA WHERE NOME = '" + framePrincipal.getBaixaConsignacao().getNome().getText() + "';"));
                while (framePrincipal.getRs().next()) {
                    Date data = new Date(framePrincipal.getRs().getDate("DATAVENC").getTime());
                    framePrincipal.getBaixaConsignacao().setDataVenc(data);
                    framePrincipal.getBaixaConsignacao().setQtde_prod_tot_vend(framePrincipal.getRs().getInt("QTDE"));
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao localizar a vendedora");
            }

        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma vendedora");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
}//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (jComboBox1.getItemCount() > 0) {
            int linhas = framePrincipal.getDevolverSacola().getjTable1().getRowCount();
            Integer numUnidades = 0;
            for (int i = 0; i < linhas; i++) {
                framePrincipal.getDevolverSacola().getModeloTabela().removeRow(0);
            }
            framePrincipal.getDevolverSacola().getjLabel3().setText("R$");
            framePrincipal.getDevolverSacola().setPreco_total(0);
            framePrincipal.getDevolverSacola().setQtdProdutos(0);
            framePrincipal.getDevolverSacola().setQuantidades_c_vendedor(new ArrayList<Integer>());
            framePrincipal.getDevolverSacola().setQuantidades_em_consignacao(new ArrayList<Integer>());
            framePrincipal.getDevolverSacola().setQuantidades_em_estoque(new ArrayList<Integer>());
            framePrincipal.setContentPane(framePrincipal.getDevolverSacola());
            framePrincipal.pack();
            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
            framePrincipal.getDevolverSacola().getjLabel6().setText(jComboBox1.getSelectedItem().toString());
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT P.NOME, C.CODBARRAS, C.QTDE as C_QTDE, P.CODBARRAS, P.PRECO, P.QTDE as P_QTDE, P.QTDECONS FROM CONSIGNACAO C JOIN PRODUTO P ON (P.CODBARRAS = C.CODBARRAS) WHERE C.NOME = '" + framePrincipal.getDevolverSacola().getjLabel6().getText() + "' GROUP BY P.NOME, C.CODBARRAS, C.QTDE, P.CODBARRAS, P.PRECO, P.QTDE, P.QTDECONS;"));
                int i = 0;
                while (framePrincipal.getRs().next()) {                    
                    if (framePrincipal.getDevolverSacola().getModeloTabela().getRowCount() < i + 1) {
                        framePrincipal.getDevolverSacola().getModeloTabela().addRow(new String[framePrincipal.getTabelaProdutos().getModeloTabela().getColumnCount()]);
                    }
                    framePrincipal.getDevolverSacola().getModeloTabela().setValueAt(framePrincipal.getRs().getString("NOME"), i, 0);
                    framePrincipal.getDevolverSacola().getModeloTabela().setValueAt(framePrincipal.getRs().getString("CODBARRAS"), i, 1);
                    framePrincipal.getDevolverSacola().getModeloTabela().setValueAt("R$ " + framePrincipal.getRs().getString("PRECO"), i, 2);
                    framePrincipal.getDevolverSacola().getModeloTabela().setValueAt(framePrincipal.getRs().getString("C_QTDE"), i, 3);
                    framePrincipal.getDevolverSacola().setPreco_total(framePrincipal.getDevolverSacola().getPreco_total() + framePrincipal.getRs().getInt("C_QTDE") * Float.parseFloat(framePrincipal.getRs().getString("PRECO")));
                    numUnidades += framePrincipal.getRs().getInt("C_QTDE");
                    framePrincipal.getDevolverSacola().getjLabelTotalUnidades().setText(numUnidades.toString());
                    i++;
                    framePrincipal.getDevolverSacola().getQuantidades_em_consignacao().add(framePrincipal.getRs().getInt("QTDECONS"));
                    framePrincipal.getDevolverSacola().getQuantidades_em_estoque().add(framePrincipal.getRs().getInt("P_QTDE"));
                    framePrincipal.getDevolverSacola().getQuantidades_c_vendedor().add(framePrincipal.getRs().getInt("C_QTDE"));
                }
                framePrincipal.getDevolverSacola().getjLabel3().setText(formatoMonetario.format(framePrincipal.getDevolverSacola().getPreco_total()));
                framePrincipal.getDevolverSacola().getjTable1().repaint();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro ao localizar os produto em consignação");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma vendedora");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (jComboBox1.getItemCount() > 0) {
            int linhas = framePrincipal.getVendaConsignacao().getjTable1().getRowCount();
            for (int i = 0; i < linhas; i++) {
                framePrincipal.getVendaConsignacao().getModeloTabela().removeRow(0);
            }
            framePrincipal.getVendaConsignacao().getjLabelPrecoTotal().setText("R$");
            framePrincipal.getVendaConsignacao().getjLabelTotalUnidades().setText("0");
            framePrincipal.getVendaConsignacao().setPreco_total(0);
            framePrincipal.getVendaConsignacao().setQtdProdutos(0);
            framePrincipal.getVendaConsignacao().setQtde_prod_tot_vend(0);
            framePrincipal.getVendaConsignacao().setQuantidades_consig_estoque(new ArrayList<Integer>());
            framePrincipal.getVendaConsignacao().setCodigos(new ArrayList<String>());
            framePrincipal.getVendaConsignacao().setQuantidades_consig_vendedora(new ArrayList<Integer>());
            framePrincipal.getVendaConsignacao().getNomeVendedora().setText(jComboBox1.getSelectedItem().toString());
            framePrincipal.setContentPane(framePrincipal.getVendaConsignacao());
            framePrincipal.getVendaConsignacao().getjTextField1().requestFocus();
            framePrincipal.pack();
            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma vendedora");
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jComboBox1
     */
    public javax.swing.JComboBox getjComboBox1() {
        return jComboBox1;
    }

    /**
     * @param jComboBox1 the jComboBox1 to set
     */
    public void setjComboBox1(javax.swing.JComboBox jComboBox1) {
        this.jComboBox1 = jComboBox1;
    }
}
