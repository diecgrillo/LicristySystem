/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TabelaConsignacao.java
 *
 * Created on 10/01/2011, 12:39:41
 */
package licrystsystem.consignacao;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import licrystsystem.impressora.GerenciadorImpressora;
import licrystsystem.main.FramePrincipal;
import org.apache.poi.hssf.usermodel.*;

/**
 *
 * @author Diego
 */
public class BaixaConsignacao extends javax.swing.JPanel {

    private FramePrincipal framePrincipal;
    private int qtdProdutos = 0;
    private float preco_total = 0;
    private List<Integer> quantidades_em_consignacao = new ArrayList<Integer>();
    private List<Integer> quantidades_em_estoque = new ArrayList<Integer>();
    private List<Integer> quantidades_c_vendedor = new ArrayList<Integer>();
    private DefaultTableModel modeloTabela;
    private Date dataVenc = new Date();
    private int qtde_prod_tot_vend = 0;
    private String diretorio;
    private GerenciadorImpressora impressora = new GerenciadorImpressora();
    private NumberFormat formatoMonetario = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

    /**
     * Creates new form TabelaConsignacao
     */
    public BaixaConsignacao(FramePrincipal framePrincipal) {
        this.framePrincipal = framePrincipal;
        initComponents();
        modeloTabela = (DefaultTableModel) jTable1.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabelTotalUnidades = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 0, 51));

        nome.setBackground(new java.awt.Color(102, 0, 51));
        nome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nome.setForeground(new java.awt.Color(255, 204, 255));
        nome.setText("teste");

        jLabel1.setBackground(new java.awt.Color(102, 0, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 204, 255));
        jLabel1.setText("Produto:");

        jTextField1.setBackground(new java.awt.Color(255, 204, 255));
        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jLabel7.setBackground(new java.awt.Color(102, 0, 51));
        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 204, 255));
        jLabel7.setText("Quantidade:");

        jTextField2.setBackground(new java.awt.Color(255, 204, 255));
        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField2.setText("1");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(240, 240, 240));
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Produto", "Cod. de barras", "Preço unitário", "Qtde"
            }
        ){

            public boolean isCellEditable(int rowIndex, int mColIndex) {
                return false;
            }
        });
        jTable1.setGridColor(new java.awt.Color(240, 240, 240));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(102, 0, 51));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(102, 0, 51));
        jButton1.setText("Devolver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(102, 0, 51));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(102, 0, 51));
        jButton3.setText("Consultar tabela de produtos");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(102, 0, 51));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 51));
        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(102, 0, 51));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 204, 255));
        jLabel2.setText("Total:");

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setBackground(new java.awt.Color(255, 51, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("R$");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap())
        );

        jLabel4.setBackground(new java.awt.Color(102, 0, 51));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 204, 255));
        jLabel4.setText("Vendedor(a):");

        jButton4.setBackground(new java.awt.Color(102, 0, 51));
        jButton4.setForeground(new java.awt.Color(102, 0, 51));
        jButton4.setText("Imprimir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 204, 255));
        jLabel6.setText("Total de Unidades:");

        jLabelTotalUnidades.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabelTotalUnidades.setForeground(new java.awt.Color(255, 204, 255));
        jLabelTotalUnidades.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addGap(10, 10, 10))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTotalUnidades)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1)
                            .addComponent(jLabel1)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabelTotalUnidades))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton3)
                            .addComponent(jButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2, jButton3});

    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        if (!jTextField1.getText().isEmpty() && !jTextField2.getText().isEmpty()) {
            boolean sinalizadorAux = false;
            int linha = 0;

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                if (jTable1.getValueAt(i, 1).toString().equals(jTextField1.getText())) {
                    linha = i;
                    sinalizadorAux = true;
                }
            }
            if (!sinalizadorAux) {
                JOptionPane.showMessageDialog(null, "Produto não encontrado");
            } else {
                if (Integer.parseInt(jTable1.getValueAt(linha, 3).toString()) - Integer.parseInt(jTextField2.getText()) >= 0) {
                    getjTable1().getModel().setValueAt(Integer.parseInt(jTable1.getValueAt(linha, 3).toString()) - Integer.parseInt(jTextField2.getText()), linha, 3);
                    setPreco_total(getPreco_total() - Integer.parseInt(getjTextField2().getText()) * Float.parseFloat(jTable1.getValueAt(linha, 2).toString().substring(3, jTable1.getValueAt(linha, 2).toString().length())));
                    Integer numUnidades = Integer.parseInt(getjLabelTotalUnidades().getText()) - Integer.parseInt(getjTextField2().getText());
                    getjLabelTotalUnidades().setText(numUnidades.toString());
                    getjLabel3().setText(formatoMonetario.format(getPreco_total()));
                } else {
                    JOptionPane.showMessageDialog(null, "Quantidade do produto " + jTable1.getValueAt(linha, 0).toString() + " insuficiente no estoque");
                }

            }
        }
        jTextField1.setText("");
        jTextField2.setText("1");
}//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        int k = evt.getKeyChar();
        if ((k > 47 && k < 58)) {
        } else {
            if (k == 22) {
                getjTextField1().setText("");
            }
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }
}//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        if (!jTextField1.getText().isEmpty() && !jTextField2.getText().isEmpty()) {
            jTextField1ActionPerformed(evt);
        }
}//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        int k = evt.getKeyChar();
        if ((k > 47 && k < 58)) {
        } else {
            if (k == 22) {
                getjTextField2().setText("");
            }
            evt.setKeyChar((char) KeyEvent.VK_CLEAR);
        }        // TODO add your handling code here:
}//GEN-LAST:event_jTextField2KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int aux = JOptionPane.showConfirmDialog(null, "Deseja fechar a consignação?");

        if (aux == 0) {
            int linha = getjTable1().getRowCount();
            int qtde_produto_vendedor;
            int qtde_produto_consignacao;

            for (int i = 0; i < linha; i++) {
                qtde_produto_vendedor = Integer.parseInt(jTable1.getValueAt(i, 3).toString());
                qtde_produto_consignacao = quantidades_em_consignacao.get(i) - (quantidades_c_vendedor.get(i) - Integer.parseInt(jTable1.getValueAt(i, 3).toString()));
                setQtde_prod_tot_vend(getQtde_prod_tot_vend() - (quantidades_c_vendedor.get(i) - Integer.parseInt(jTable1.getValueAt(i, 3).toString())));

                try {
                    framePrincipal.getStm().executeUpdate("UPDATE PRODUTO SET QTDECONS = " + qtde_produto_consignacao + "WHERE CODBARRAS = " + Long.parseLong((String) getjTable1().getValueAt(i, 1)) + ";");
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao atualizar o estoque");
                }
                if (qtde_produto_vendedor == 0) {
                    try {
                        framePrincipal.getStm().executeUpdate("DELETE FROM CONSIGNACAO WHERE CODBARRAS = " + getjTable1().getValueAt(i, 1).toString() + " AND NOME = '" + getNome().getText() + "';");
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao deletar produto");
                    }
                } else {
                    try {
                        framePrincipal.getStm().executeUpdate("UPDATE CONSIGNACAO SET QTDE = " + qtde_produto_vendedor + " WHERE CODBARRAS = " + getjTable1().getValueAt(i, 1).toString() + " AND NOME = '" + getNome().getText() + "';");
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Erro ao deletar produto2");
                    }
                }
                framePrincipal.getInserirProduto1_2().setAtualizado(true);

            }
            try {
                framePrincipal.getStm().executeUpdate("UPDATE VENDEDORA SET QTDE = " + getQtde_prod_tot_vend() + " WHERE NOME = '" + getNome().getText() + "';");
                //            JOptionPane.showMessageDialog(null, "Erro ao deletar produto3");
            } catch (SQLException ex) {
                Logger.getLogger(BaixaConsignacao.class.getName()).log(Level.SEVERE, null, ex);
            }

//            JOptionPane.showMessageDialog(null, "Erro ao deletar produto3");


            JOptionPane.showMessageDialog(null, "Produtos devolvidos");

            framePrincipal.setContentPane(framePrincipal.getConsignacao1());
            framePrincipal.pack();
            framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
        }
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        framePrincipal.getTabelaProdutos().setN(4);
        framePrincipal.getTabelaProdutos().getjTable1().setEnabled(false);
        framePrincipal.setContentPane(framePrincipal.getTabelaProdutos());
        framePrincipal.pack();
        framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);
        if (framePrincipal.getInserirProduto1_2().isAtualizado()) {
            try {
                framePrincipal.setRs(framePrincipal.getStm().executeQuery("SELECT P.NOME, P.CODBARRAS, P.PRECO, P.QTDE, P.QTDECONS FROM PRODUTO P GROUP BY P.NOME, P.CODBARRAS, P.PRECO, P.QTDE, P.QTDECONS;"));
                int i = 0;

                while (framePrincipal.getRs().next()) {
                    if (framePrincipal.getTabelaProdutos().getModeloTabela().getRowCount() < i + 1) {
                        framePrincipal.getTabelaProdutos().getModeloTabela().addRow(new String[framePrincipal.getTabelaProdutos().getModeloTabela().getColumnCount()]);
                    }
                    framePrincipal.getTabelaProdutos().getModeloTabela().setValueAt(framePrincipal.getRs().getString("NOME"), i, 0);
                    framePrincipal.getTabelaProdutos().getModeloTabela().setValueAt(framePrincipal.getRs().getString("CODBARRAS"), i, 1);
                    framePrincipal.getTabelaProdutos().getModeloTabela().setValueAt("R$ " + framePrincipal.getRs().getString("PRECO"), i, 2);
                    framePrincipal.getTabelaProdutos().getModeloTabela().setValueAt(framePrincipal.getRs().getString("QTDE"), i, 3);
                    framePrincipal.getTabelaProdutos().getModeloTabela().setValueAt(framePrincipal.getRs().getString("QTDECONS"), i, 4);
                    i++;
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Produto não encontrado");
            }
            framePrincipal.getTabelaProdutos().getjTable1().repaint();
            framePrincipal.getInserirProduto1_2().setAtualizado(false);
        }

}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        framePrincipal.setContentPane(framePrincipal.getConsignacao1());
        framePrincipal.pack();
        framePrincipal.setExtendedState(FramePrincipal.MAXIMIZED_BOTH);        // TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            Date trialTime = new Date();
            Calendar calendar = new GregorianCalendar();
            calendar.setTime(trialTime);
            SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
            String nomeCliente = nome.getText();
            String dataAtual = formatador.format(calendar.getTime());
            String dataVencimento = formatador.format(getDataVenc());
            int qtde;
            String produto;
            String cod;
            Float valorUnit;
            Float valorTotal;
            Float precoTotal = new Float(0.0);
            String bufferPrint = "";
            int numUnidades = 0;

            // linha
            HSSFRow row;

            FileOutputStream stream;
            HSSFWorkbook wb = new HSSFWorkbook();
            HSSFSheet plan1;

            //Verifica se o arquivo já existe e pergunta sobre a reescrita
            File auxFile = new File(diretorio + "Consignação/" + nome.getText()
                    + "-" + formatador.format(calendar.getTime()).replaceAll("/", "-") + ".xls");
            if (auxFile.exists()) {
                int overwriteFile = JOptionPane.showConfirmDialog(null, "O arquivo " + nome.getText()
                        + "-" + formatador.format(calendar.getTime()).replaceAll("/", "-") + ".xls"
                        + " já existe. Deseja substituir?", "", JOptionPane.YES_NO_OPTION);
                if (overwriteFile == 0)//Deseja sobrescrever
                {
                    auxFile.delete();
                } else //Não deseja Sobrescrever
                {
                    JOptionPane.showMessageDialog(null, "O arquivo não foi criado");
                    return;
                }
            }

            // cria a planilha
            plan1 = wb.createSheet("Plan1");

            // cria a linha na planilha o parametro da função create row é a linha            
            plan1.setColumnWidth(0, 1400);
            plan1.setColumnWidth(1, 8300);
            plan1.setColumnWidth(2, 3400);
            plan1.setColumnWidth(3, 3100);
            plan1.setColumnWidth(4, 3100);


            row = plan1.createRow(0);

            HSSFFont fonte = wb.createFont();
            fonte.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            fonte.setFontHeightInPoints((short) 10);
            HSSFCellStyle estilo1 = wb.createCellStyle();
            estilo1.setFont(fonte);

            //linha 1
            row.setHeightInPoints(15);
            row.createCell(0);
            row.getCell(0).setCellStyle(estilo1);
            row.getCell(0).setCellValue("LICRISTY COM DE LING.");

            //linha 2
            row = plan1.createRow(1);
            row.setHeightInPoints(15);
            row.createCell(0);
            row.getCell(0).setCellStyle(estilo1);
            row.getCell(0).setCellValue("FONE: 4524-0546 / 9239-0406");

            //linha 3
            row = plan1.createRow(2);
            row.setHeightInPoints(15);
            row.createCell(0);
            row.getCell(0).setCellStyle(estilo1);
            row.getCell(0).setCellValue("NOME: " + nomeCliente);

            //linha 4
            row = plan1.createRow(3);
            row.setHeightInPoints(15);
            row.createCell(0);
            row.getCell(0).setCellStyle(estilo1);
            row.getCell(0).setCellValue("DATA: " + formatador.format(calendar.getTime()));

            //linha 5
            row = plan1.createRow(4);
            row.setHeightInPoints(15);
            row.createCell(0);
            row.getCell(0).setCellStyle(estilo1);
            row.getCell(0).setCellValue("VENC: " + formatador.format(getDataVenc()));

            //Alterando a fonte
            HSSFFont fonte2 = wb.createFont();
            fonte2.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            fonte2.setFontHeightInPoints((short) 9);
            HSSFCellStyle estilo2 = wb.createCellStyle();
            estilo2.setFont(fonte2);
            estilo2.setBorderBottom((short) 2);
            estilo2.setBorderTop((short) 2);
            estilo2.setBorderLeft((short) 2);
            estilo2.setBorderRight((short) 2);
            estilo2.setAlignment((short) 2);
            HSSFRow row2;

            //linha 7
            row2 = plan1.createRow(6);
            row2.setHeightInPoints(15);

            //coluna 1
            row2.createCell(0);
            row2.getCell(0).setCellStyle(estilo2);
            row2.getCell(0).setCellValue("QTDE");
            //coluna 2
            row2.createCell(1);
            row2.getCell(1).setCellStyle(estilo2);
            row2.getCell(1).setCellValue("PRODUTOS");
            //coluna 3
            row2.createCell(2);
            row2.getCell(2).setCellStyle(estilo2);
            row2.getCell(2).setCellValue("REF");
            //coluna 4
            row2.createCell(3);
            row2.getCell(3).setCellStyle(estilo2);
            row2.getCell(3).setCellValue("VALOR UNIT");
            //coluna 5
            row2.createCell(4);
            row2.getCell(4).setCellStyle(estilo2);
            row2.getCell(4).setCellValue("VALOR QTDE");

            for (int i = 0; i < jTable1.getRowCount(); i++) {
                row = plan1.createRow(7 + i);
                if (jTable1.getValueAt(i, 0) != null) {

                    //variáveis da tabela
                    qtde = Integer.parseInt(jTable1.getValueAt(i, 3).toString());
                    produto = jTable1.getValueAt(i, 0).toString();
                    cod = jTable1.getValueAt(i, 1).toString();
                    valorUnit = Float.parseFloat(jTable1.getValueAt(i, 2).toString().substring(3).replaceAll(",", "."));
                    valorTotal = qtde * valorUnit;
                    precoTotal = precoTotal + valorTotal;
                    numUnidades += qtde;

                    //coluna 1
                    row.createCell(0);
                    row.getCell(0).setCellValue(qtde);

                    //coluna 2
                    row.createCell(1);
                    row.getCell(1).setCellValue(produto);

                    //coluna 3
                    row.createCell(2);
                    row.getCell(2).setCellValue(cod);

                    //coluna 4
                    row.createCell(3);
                    estilo2 = wb.createCellStyle();
                    estilo2.setDataFormat((short) 8);
                    row.getCell(3).setCellStyle(estilo2);
                    row.getCell(3).setCellValue(valorUnit);

                    //coluna 5
                    row.createCell(4);
                    row.getCell(4).setCellStyle(estilo2);
                    row.getCell(4).setCellValue(valorTotal);

                    bufferPrint = bufferPrint + produto + " " + cod + "\n"
                            + qtde + " X " + formatoMonetario.format(valorUnit) + "                    "
                            + formatoMonetario.format(valorTotal) + "\n";
                }

            }

            bufferPrint = bufferPrint + "Número de unidades: " + numUnidades + "\n";

            //Alterando a fonte
            HSSFFont fonte3 = wb.createFont();
            fonte3.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            fonte3.setFontHeightInPoints((short) 9);
            HSSFCellStyle estilo3 = wb.createCellStyle();
            estilo3.setFont(fonte3);
            estilo3.setBorderBottom((short) 2);
            estilo3.setBorderTop((short) 2);
            estilo3.setBorderLeft((short) 2);
            estilo3.setBorderRight((short) 2);
            estilo3.setAlignment((short) 2);
            HSSFRow row3;

            //linha 8 + qtde de produtos
            row3 = plan1.createRow(jTable1.getRowCount() + 8);
            row3.createCell(0);
            row3.getCell(0).setCellStyle(estilo3);
            int aux = (7 + jTable1.getRowCount());
            row3.getCell(0).setCellFormula("SUM(A8:" + "A" + aux + ")");

            //Alterando fonte
            HSSFRow row4;
            fonte3 = wb.createFont();
            fonte3.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            fonte3.setFontHeightInPoints((short) 9);
            HSSFCellStyle estilo4 = wb.createCellStyle();
            estilo4.setBorderBottom((short) 2);
            estilo4.setBorderTop((short) 2);
            estilo4.setBorderLeft((short) 2);
            estilo4.setBorderRight((short) 0);
            estilo4.setFont(fonte3);

            //linha 10 + qtde de produtos
            row4 = plan1.createRow(jTable1.getRowCount() + 9);
            row4.createCell(2);
            row4.getCell(2).setCellStyle(estilo4);
            row4.getCell(2).setCellValue("VALOR TOTAL:");

            //Alterando a fonte
            HSSFCellStyle estilo5 = wb.createCellStyle();
            estilo5.setBorderBottom((short) 2);
            estilo5.setBorderTop((short) 2);
            estilo5.setBorderLeft((short) 0);
            estilo5.setBorderRight((short) 2);
            estilo5.setDataFormat((short) 8);
            estilo5.setFont(fonte3);

            //total a pagar
            row4.createCell(3);
            row4.getCell(3).setCellStyle(estilo5);
            row4.getCell(3).setCellFormula("SUM(E8:" + "E" + aux + ")");

            //linha 12 + qtde de produtos
            HSSFRow row6;
            row6 = plan1.createRow(jTable1.getRowCount() + 11);
            row6.createCell(0);
            row6.getCell(0).setCellStyle(estilo1);
            row6.getCell(0).setCellValue("*DESC. DE 30%  PARA. VENDA ACIMA DE R$ 400,00 PAGO ATÉ O");

            //linha 13 + qtde de produtos
            row6 = plan1.createRow(jTable1.getRowCount() + 12);
            row6.createCell(0);
            row6.getCell(0).setCellStyle(estilo1);
            row6.getCell(0).setCellValue("*APÓS  VENCIMENTO  SOMENTE 25%");

            //linha 14 + qtde de produtos
            row6 = plan1.createRow(jTable1.getRowCount() + 13);
            row6.createCell(0);
            row6.getCell(0).setCellStyle(estilo1);
            row6.getCell(0).setCellValue("*APÓS O 15º DIA  DE ATRAZO PAGAMENTO SEM DESCONTO");

            //linha 15 + qtde de produtos
            row6 = plan1.createRow(jTable1.getRowCount() + 14);
            row6.createCell(0);
            row6.getCell(0).setCellStyle(estilo1);
            row6.getCell(0).setCellValue("*ATENÇÃO , SUJEITO A COBRANÇA EM CARTORIO");

            //Alterando fonte
            HSSFRow row7;
            HSSFFont fonte4 = wb.createFont();
            fonte4.setBoldweight(HSSFFont.BOLDWEIGHT_BOLD);
            fonte4.setFontHeightInPoints((short) 12);
            HSSFCellStyle estilo6 = wb.createCellStyle();
            estilo6.setFont(fonte4);

            //linha 16 + qtde de produtos
            row7 = plan1.createRow(jTable1.getRowCount() + 15);
            row7.createCell(0);
            row7.getCell(0).setCellStyle(estilo6);
            row7.getCell(0).setCellValue("DEVOLUÇAO DA SACOLA EM 30 DIAS ");

            imprimeNaoFiscal(dataVencimento, nomeCliente, bufferPrint, formatoMonetario.format(precoTotal));

            stream = new FileOutputStream(getDiretorio() + "Consignação/" + nome.getText()
                    + "-" + formatador.format(calendar.getTime()).replaceAll("/", "-") + ".xls");
            wb.write(stream);
            JOptionPane.showMessageDialog(null, "Arquivo criado");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erro ao criar arquivo, feche a planilha e tente novamente");
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelTotalUnidades;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JLabel nome;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the qtdProdutos
     */
    public int getQtdProdutos() {
        return qtdProdutos;
    }

    /**
     * @param qtdProdutos the qtdProdutos to set
     */
    public void setQtdProdutos(int qtdProdutos) {
        this.qtdProdutos = qtdProdutos;
    }

    /**
     * @return the preco_total
     */
    public float getPreco_total() {
        return preco_total;
    }

    /**
     * @param preco_total the preco_total to set
     */
    public void setPreco_total(float preco_total) {
        this.preco_total = preco_total;
    }

    /**
     * @return the modeloTabela
     */
    public DefaultTableModel getModeloTabela() {
        return modeloTabela;
    }

    /**
     * @param modeloTabela the modeloTabela to set
     */
    public void setModeloTabela(DefaultTableModel modeloTabela) {
        this.modeloTabela = modeloTabela;
    }

    /**
     * @return the jLabel3
     */
    public javax.swing.JLabel getjLabel3() {
        return jLabel3;
    }

    /**
     * @param jLabel3 the jLabel3 to set
     */
    public void setjLabel3(javax.swing.JLabel jLabel3) {
        this.jLabel3 = jLabel3;
    }

    /**
     * @return the jTable1
     */
    public javax.swing.JTable getjTable1() {
        return jTable1;
    }

    /**
     * @param jTable1 the jTable1 to set
     */
    public void setjTable1(javax.swing.JTable jTable1) {
        this.jTable1 = jTable1;
    }

    /**
     * @return the jTextField1
     */
    public javax.swing.JTextField getjTextField1() {
        return jTextField1;
    }

    /**
     * @param jTextField1 the jTextField1 to set
     */
    public void setjTextField1(javax.swing.JTextField jTextField1) {
        this.jTextField1 = jTextField1;
    }

    /**
     * @return the jTextField2
     */
    public javax.swing.JTextField getjTextField2() {
        return jTextField2;
    }

    /**
     * @param jTextField2 the jTextField2 to set
     */
    public void setjTextField2(javax.swing.JTextField jTextField2) {
        this.jTextField2 = jTextField2;
    }

    /**
     * @return the jLabel6
     */
    public javax.swing.JLabel getNome() {
        return nome;
    }

    /**
     * @param jLabel6 the jLabel6 to set
     */
    public void setjLabel6(javax.swing.JLabel jLabel6) {
        this.nome = jLabel6;
    }

    /**
     * @return the quantidades_em_consignacao
     */
    public List<Integer> getQuantidades_em_consignacao() {
        return quantidades_em_consignacao;
    }

    /**
     * @param quantidades_em_consignacao the quantidades_em_consignacao to set
     */
    public void setQuantidades_em_consignacao(List<Integer> quantidades_em_consignacao) {
        this.quantidades_em_consignacao = quantidades_em_consignacao;
    }

    /**
     * @return the quantidades_em_estoque
     */
    public List<Integer> getQuantidades_em_estoque() {
        return quantidades_em_estoque;
    }

    /**
     * @param quantidades_em_estoque the quantidades_em_estoque to set
     */
    public void setQuantidades_em_estoque(List<Integer> quantidades_em_estoque) {
        this.quantidades_em_estoque = quantidades_em_estoque;
    }

    /**
     * @return the quantidades_c_vendedor
     */
    public List<Integer> getQuantidades_c_vendedor() {
        return quantidades_c_vendedor;
    }

    /**
     * @param quantidades_c_vendedor the quantidades_c_vendedor to set
     */
    public void setQuantidades_c_vendedor(List<Integer> quantidades_c_vendedor) {
        this.quantidades_c_vendedor = quantidades_c_vendedor;
    }

    /**
     * @return the jButton1
     */
    public javax.swing.JButton getjButton1() {
        return jButton1;
    }

    /**
     * @param jButton1 the jButton1 to set
     */
    public void setjButton1(javax.swing.JButton jButton1) {
        this.jButton1 = jButton1;
    }

    /**
     * @return the jButton2
     */
    public javax.swing.JButton getjButton2() {
        return jButton2;
    }

    /**
     * @param jButton2 the jButton2 to set
     */
    public void setjButton2(javax.swing.JButton jButton2) {
        this.jButton2 = jButton2;
    }

    /**
     * @return the jButton3
     */
    public javax.swing.JButton getjButton3() {
        return jButton3;
    }

    /**
     * @param jButton3 the jButton3 to set
     */
    public void setjButton3(javax.swing.JButton jButton3) {
        this.jButton3 = jButton3;
    }

    /**
     * @return the jLabel1
     */
    public javax.swing.JLabel getjLabel1() {
        return jLabel1;
    }

    /**
     * @param jLabel1 the jLabel1 to set
     */
    public void setjLabel1(javax.swing.JLabel jLabel1) {
        this.jLabel1 = jLabel1;
    }

    /**
     * @return the jLabel7
     */
    public javax.swing.JLabel getjLabel7() {
        return jLabel7;
    }

    /**
     * @param jLabel7 the jLabel7 to set
     */
    public void setjLabel7(javax.swing.JLabel jLabel7) {
        this.jLabel7 = jLabel7;
    }

    /**
     * @return the jLabelTotalUnidades
     */
    public javax.swing.JLabel getjLabelTotalUnidades() {
        return jLabelTotalUnidades;
    }

    /**
     * @param jLabelTotalUnidades the jLabelTotalUnidades to set
     */
    public void setjLabelTotalUnidades(javax.swing.JLabel jLabelTotalUnidades) {
        this.jLabelTotalUnidades = jLabelTotalUnidades;
    }

    /**
     * @return the jButton4
     */
    public javax.swing.JButton getjButton4() {
        return jButton4;
    }

    /**
     * @param jButton4 the jButton4 to set
     */
    public void setjButton4(javax.swing.JButton jButton4) {
        this.jButton4 = jButton4;
    }

    /**
     * @return the dataVenc
     */
    public Date getDataVenc() {
        return dataVenc;
    }

    /**
     * @param dataVenc the dataVenc to set
     */
    public void setDataVenc(Date dataVenc) {
        this.dataVenc = dataVenc;
    }

    /**
     * @return the qtde
     */
    public int getQtde_prod_tot_vend() {
        return qtde_prod_tot_vend;
    }

    /**
     * @param qtde the qtde to set
     */
    public void setQtde_prod_tot_vend(int qtde_prod_tot_vend) {
        this.qtde_prod_tot_vend = qtde_prod_tot_vend;
    }

    /**
     * @return the diretorio
     */
    public String getDiretorio() {
        return diretorio;
    }

    /**
     * @param diretorio the diretorio to set
     */
    public void setDiretorio(String diretorio) {
        this.diretorio = diretorio;
    }

    private void imprimeNaoFiscal(String dataVencimento, String nomeCliente, String bufferPrint, String precoTotal) {
        String cpf = JOptionPane.showInputDialog(null, "Deseja colocar CPF?", "", JOptionPane.YES_NO_OPTION);
        //1ª Via
        if (cpf != null) {
            impressora.imprimeCabecalho(cpf, dataVencimento, nomeCliente);
            impressora.imprime(bufferPrint);
            impressora.imprimeRodape(precoTotal);
            impressora.cortaPapel();
            //2ª Via
            impressora.imprimeCabecalho(cpf, dataVencimento, nomeCliente);
            impressora.imprime(bufferPrint);
            impressora.imprimeRodape(precoTotal);
            impressora.cortaPapel();
        }
    }
}
